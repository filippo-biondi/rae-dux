* rae-dux
| [[images/board-front.png]] | [[images/board-back.png]] |

The rae-dux is a 36-key (diodeless!), wireless keyboard inspired by the [[https://github.com/tapioki/cephalopoda/tree/main/Architeuthis%20dux][Architeuthis Dux]].
This project used to use the [[https://github.com/soundmonster/samoklava][samoklava workflow]], however the auto-router had
troubles with the splay, currently I just use the image generating parts of the
samoklava workflow.

*This has now been printed and is working perfectly with ZMK!*
The ZMK shield can be found [[https://github.com/andrewjrae/zmk-config/tree/development/config/boards/shields/rae_dux][here]], as far as I can tell small custom projects
like this aren't to be merged into ZMK main, so you'll have to emulate what I'm
doing in my =zmk-config= [[https://github.com/andrewjrae/zmk-config/tree/development/config][here]].

** Build Guide
The wonderful @tzcl created a [[https://www.tzcl.me/posts/rae-dux][build guide]] for the rae-dux, so if you are curious
about building the board, but don't have experience with this sort of thing go
check it out!

** Important Notes
- *Wireless only*, the 36-key diodeless approach uses the P0 pin which is usually dedicated to TRRS
- Since I ended up largely ditching the samoklava workflow, *the actions page with gerbers is out of date and no longer relevant**
- Their is only one MCU footprint, so *one controller has to be flipped* (I assume
   if you can get this printed you can figure out the correct orientation)
- The [[./rae-dux.yaml][rae-dux.yaml]] file relies on [[https://github.com/andrewjrae/ergogen/tree/rae-dux][my fork of ergogen]] which naturally relies on
  [[https://github.com/soundmonster/ergogen/tree/samoklava][soundmonster's fork of ergogen]], and a simple JST battery footprint inspired by
  [[https://github.com/benvallack][@benvallack]].
- If you want to skip out on the switch, there is no jumper to use the JST
  connector, so you'll have to bodge a wire somewhere, or try shorting the
  switch footprint.
- Kicad files are 6.0, so unfortunately not backwards compatible.
